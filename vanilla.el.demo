(package-demo-define-demo my-package-demo-demo
  (M-x butterfly :speed 10 :callback ((typewriter "yes")(kbd "RET")))
  (pause 1)
  (kbd "RET"))

(my-package-demo-demo)

(defun switch-to-minibuffer ()
  "Switch to minibuffer window."
  (interactive)
  (if (active-minibuffer-window)
      (select-window (active-minibuffer-window))
    (error "Minibuffer is not active")))

(package-demo-define-action mini-typewriter (text &rest keys)
  (switch-to-minibuffer)
  (let ((speed (package-demo-get-argument 'typewriter :speed keys)))
    (seq-doseq (c text)
      (insert-char c)
      (sit-for (/ 1.0 speed)))))

(defun lunaryorn-new-buffer-frame ()
  "Create a new frame with a new empty buffer."
  (interactive)
  (let ((buffer (generate-new-buffer "untitled")))
    (set-buffer-major-mode buffer)
    (display-buffer buffer '(display-buffer-pop-up-frame . nil))
    buffer))

(package-demo-define-demo vanilla-demo
  (typewriter "Welcome to Emacs")
  (kbd "RET")
  (typewriter "================")
  (pause 1)
  (kbd "RET"))

(progn
  (with-current-buffer (lunaryorn-new-buffer-frame)
    (rename-buffer "vanilla-demo")
    (vanilla-demo)))

; (package-demo-define-demo demo-magit-commit
;   (M-x magit-status
;        :callback
;        ((pause 1)
;         (kbd "c")
;         (pause 1)
;         (kbd "c")
;         (pause 1 :callback
;                ((typewriter "Initial commit")
;                 (kbd "C-c C-c"))))))

; (package-demo-do
;  'M-x
;  'magit-status
;  :callback
;  '((pause 1)
;    (kbd "c")
;    (pause 1)
;    (kbd "c")
;    (pause 1 :callback
;           ((typewriter "Initial commit")
;            (pause 1 :callback ((kbd "C-c C-c")))))))

(package-demo-do 'pause 1)

;;; syntax like this would be nice:
